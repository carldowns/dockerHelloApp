
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.pwllc</groupId>
	<artifactId>hello-docker-app</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>DockerTestApp</name>

	<properties>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<junit.version>4.11</junit.version>
		<dropwizard.version>0.8.2</dropwizard.version>

        <!-- leave empty for docker hub; use e.g. "localhost:5000/" for a local docker registry -->
        <docker.registry.name></docker.registry.name>

        <!--<docker.repository.name>${docker.registry.name}cdowns/${project.artifactId}</docker.repository.name>-->
		<docker.repository.name>cdowns/${project.artifactId}</docker.repository.name>

        <!-- this is not localhost when using boot2docker! -->
        <!--<docker.host.address>localhost</docker.host.address>-->
        <docker.host.address>192.168.99.100</docker.host.address>

        <cdowns.port>8080</cdowns.port>
        <cdowns.port.admin>8081</cdowns.port.admin>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.dropwizard</groupId>
			<artifactId>dropwizard-core</artifactId>
			<version>${dropwizard.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>TestApp</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<createDependencyReducedPom>true</createDependencyReducedPom>
					<filters>
						<filter>
							<artifact>*:*</artifact>
							<excludes>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
						</filter>
					</filters>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.pwllc.application.TestApplication</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.13.3</version>
                <configuration>
                    <images>
                        <image>
                            <alias>${project.artifactId}</alias>
                            <name>${docker.repository.name}:${project.version}</name>
                            <build>
                                <from>java:8-jre</from>
                                <maintainer>cdowns</maintainer>
                                <assembly>
                                    <descriptor>docker-assembly.xml</descriptor>
                                </assembly>
                                <ports>
                                    <port>8080</port>
                                    <port>8081</port>
                                </ports>
                                <cmd>
                                    <shell>java -jar \
                                        /maven/${project.build.finalName}.jar server \
                                        /maven/docker-config.yml</shell>
                                </cmd>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>${cdowns.port}:8080</port>
                                    <port>${cdowns.port.admin}:8081</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${user.home}/logs:/logs</volume>
                                    </bind>
                                </volumes>
                                <wait>
                                    <url>http://${docker.host.address}:${cdowns.port.admin}/ping</url>
                                    <time>10000</time>
                                </wait>
                                <log>
                                    <prefix>${project.artifactId}</prefix>
                                    <color>cyan</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

		</plugins>
	</build>


</project>
